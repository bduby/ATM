/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 12 18:58:19 GMT 2016
 */

package simulation;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import banking.Balances;
import banking.Card;
import banking.Message;
import banking.Money;
import banking.Status;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import simulation.SimulatedBank;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SimulatedBank_ESTest extends SimulatedBank_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Card card0 = new Card(1);
      Message message0 = new Message(2, card0, 42, 1, 1, 2, (Money) null);
      SimulatedBank simulatedBank0 = new SimulatedBank();
      message0.setPIN(2);
      Status status0 = simulatedBank0.handleMessage(message0, (Balances) null);
      assertNotNull(status0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimulatedBank simulatedBank0 = new SimulatedBank();
      Card card0 = new Card(3);
      Balances balances0 = new Balances();
      Message message0 = new Message(0, card0, 3, 3, 0, 3, (Money) null);
      // Undeclared exception!
      try { 
        simulatedBank0.handleMessage(message0, balances0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         assertThrownBy("simulation.SimulatedBank", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimulatedBank simulatedBank0 = new SimulatedBank();
      Card card0 = new Card(1);
      Message message0 = new Message(4, card0, 42, 42, 2, 42, (Money) null);
      Balances balances0 = new Balances();
      Status status0 = simulatedBank0.handleMessage(message0, balances0);
      assertNotNull(status0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimulatedBank simulatedBank0 = new SimulatedBank();
      Card card0 = new Card(1);
      Message message0 = new Message(3, card0, 42, 1, 1, 0, (Money) null);
      // Undeclared exception!
      try { 
        simulatedBank0.handleMessage(message0, (Balances) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("simulation.SimulatedBank", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimulatedBank simulatedBank0 = new SimulatedBank();
      Card card0 = new Card(1);
      Balances balances0 = new Balances();
      Message message0 = new Message(3, card0, 42, 1, 1, 1, (Money) null);
      Status status0 = simulatedBank0.handleMessage(message0, balances0);
      assertNotNull(status0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimulatedBank simulatedBank0 = new SimulatedBank();
      Balances balances0 = new Balances();
      Card card0 = new Card(1);
      Message message0 = new Message(3, card0, 42, 1, 1, 2, (Money) null);
      Status status0 = simulatedBank0.handleMessage(message0, balances0);
      assertNotNull(status0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimulatedBank simulatedBank0 = new SimulatedBank();
      Card card0 = new Card(1);
      Message message0 = new Message(2, card0, 42, 1, 1, 1, (Money) null);
      // Undeclared exception!
      try { 
        simulatedBank0.handleMessage(message0, (Balances) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("banking.Money", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Card card0 = new Card(1);
      Message message0 = new Message(1, card0, 42, 1, 1, 2, (Money) null);
      SimulatedBank simulatedBank0 = new SimulatedBank();
      Status status0 = simulatedBank0.handleMessage(message0, (Balances) null);
      assertNotNull(status0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimulatedBank simulatedBank0 = new SimulatedBank();
      Card card0 = new Card(1);
      Message message0 = new Message(0, card0, 42, 42, 2, 42, (Money) null);
      Balances balances0 = new Balances();
      Status status0 = simulatedBank0.handleMessage(message0, balances0);
      assertNotNull(status0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Card card0 = new Card(1);
      SimulatedBank simulatedBank0 = new SimulatedBank();
      Message message0 = new Message(42, card0, 42, 42, 42, 42, (Money) null);
      Balances balances0 = new Balances();
      Status status0 = simulatedBank0.handleMessage(message0, balances0);
      assertNull(status0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Card card0 = new Card(1);
      Message message0 = new Message(4, card0, 42, 1, 1, 4, (Money) null);
      SimulatedBank simulatedBank0 = new SimulatedBank();
      Balances balances0 = new Balances();
      Status status0 = simulatedBank0.handleMessage(message0, balances0);
      assertNotNull(status0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Card card0 = new Card(1);
      Message message0 = new Message(2, card0, 42, 1, 1, 2, (Money) null);
      SimulatedBank simulatedBank0 = new SimulatedBank();
      Status status0 = simulatedBank0.handleMessage(message0, (Balances) null);
      assertNotNull(status0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Card card0 = new Card(1);
      Message message0 = new Message(1, card0, 42, 1, 1, 1, (Money) null);
      SimulatedBank simulatedBank0 = new SimulatedBank();
      Balances balances0 = new Balances();
      Status status0 = simulatedBank0.handleMessage(message0, balances0);
      assertNotNull(status0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimulatedBank simulatedBank0 = new SimulatedBank();
      Card card0 = new Card(1);
      Message message0 = new Message(3, card0, 42, 42, 2, 42, (Money) null);
      Balances balances0 = new Balances();
      Status status0 = simulatedBank0.handleMessage(message0, balances0);
      assertNotNull(status0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Card card0 = new Card(1);
      Message message0 = new Message(0, card0, 42, 1, 1, 0, (Money) null);
      SimulatedBank simulatedBank0 = new SimulatedBank();
      // Undeclared exception!
      try { 
        simulatedBank0.handleMessage(message0, (Balances) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("simulation.SimulatedBank", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Balances balances0 = new Balances();
      SimulatedBank simulatedBank0 = new SimulatedBank();
      Card card0 = new Card(9);
      Message message0 = new Message(9, card0, 9, 9, 9, 9, (Money) null);
      Status status0 = simulatedBank0.handleMessage(message0, balances0);
      assertNotNull(status0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimulatedBank simulatedBank0 = new SimulatedBank();
      Card card0 = new Card((-2002));
      Balances balances0 = new Balances();
      Message message0 = new Message(1, card0, 1, (-2002), (-2002), 1, (Money) null);
      Status status0 = simulatedBank0.handleMessage(message0, balances0);
      assertNotNull(status0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimulatedBank simulatedBank0 = new SimulatedBank();
      Card card0 = new Card(1);
      Balances balances0 = new Balances();
      Message message0 = new Message(798, card0, 1626, 1, 1626, 1, (Money) null);
      Status status0 = simulatedBank0.handleMessage(message0, balances0);
      assertNotNull(status0);
  }
}
