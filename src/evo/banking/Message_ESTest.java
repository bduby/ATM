/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 12 18:14:26 GMT 2016
 */

package banking;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import banking.Card;
import banking.Message;
import banking.Money;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Message_ESTest extends Message_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Card card0 = new Card(0);
      Message message0 = new Message(0, card0, 0, 0, 0, 0, (Money) null);
      int int0 = message0.getToAccount();
      assertEquals(0, message0.getFromAccount());
      assertEquals(0, message0.getSerialNumber());
      assertEquals(0, int0);
      assertEquals(0, message0.getPIN());
      assertEquals(0, message0.getMessageCode());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Card card0 = new Card(0);
      Message message0 = new Message((-3157), card0, 0, (-1), (-541), (-1), (Money) null);
      int int0 = message0.getToAccount();
      assertEquals(0, message0.getPIN());
      assertEquals((-1), int0);
      assertEquals(-3157, message0.getMessageCode());
      assertEquals(-541, message0.getFromAccount());
      assertEquals(-1, message0.getSerialNumber());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Card card0 = new Card(0);
      Message message0 = new Message(0, card0, 0, 0, 0, 0, (Money) null);
      int int0 = message0.getSerialNumber();
      assertEquals(0, message0.getFromAccount());
      assertEquals(0, message0.getMessageCode());
      assertEquals(0, message0.getToAccount());
      assertEquals(0, message0.getPIN());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Card card0 = new Card((-126));
      Message message0 = new Message((-126), card0, (-126), (-126), (-126), (-126), (Money) null);
      int int0 = message0.getSerialNumber();
      assertEquals(-126, message0.getPIN());
      assertEquals(-126, message0.getToAccount());
      assertEquals(-126, message0.getFromAccount());
      assertEquals(-126, message0.getMessageCode());
      assertEquals((-126), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Card card0 = new Card(0);
      Message message0 = new Message(0, card0, 0, 0, 0, 0, (Money) null);
      int int0 = message0.getPIN();
      assertEquals(0, message0.getFromAccount());
      assertEquals(0, message0.getToAccount());
      assertEquals(0, message0.getSerialNumber());
      assertEquals(0, int0);
      assertEquals(0, message0.getMessageCode());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Message message0 = new Message(2055, (Card) null, (-255), (-255), 2055, 2055, (Money) null);
      int int0 = message0.getPIN();
      assertEquals(2055, message0.getToAccount());
      assertEquals(-255, message0.getSerialNumber());
      assertEquals(2055, message0.getFromAccount());
      assertEquals((-255), int0);
      assertEquals(2055, message0.getMessageCode());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Card card0 = new Card(1621);
      Message message0 = new Message(3, card0, 0, 0, 3, 0, (Money) null);
      int int0 = message0.getMessageCode();
      assertEquals(3, int0);
      assertEquals(3, message0.getFromAccount());
      assertEquals(0, message0.getPIN());
      assertEquals(0, message0.getSerialNumber());
      assertEquals(0, message0.getToAccount());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Card card0 = new Card((-1869));
      Message message0 = new Message((-1869), card0, (-1869), (-1869), (-1869), (-1869), (Money) null);
      int int0 = message0.getMessageCode();
      assertEquals((-1869), int0);
      assertEquals(-1869, message0.getPIN());
      assertEquals(-1869, message0.getFromAccount());
      assertEquals(-1869, message0.getToAccount());
      assertEquals(-1869, message0.getSerialNumber());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Card card0 = new Card(0);
      Message message0 = new Message(0, card0, 0, 0, 0, 0, (Money) null);
      int int0 = message0.getFromAccount();
      assertEquals(0, message0.getMessageCode());
      assertEquals(0, int0);
      assertEquals(0, message0.getSerialNumber());
      assertEquals(0, message0.getPIN());
      assertEquals(0, message0.getToAccount());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Card card0 = new Card((-1608));
      Message message0 = new Message(2028, card0, 2028, (-1608), (-1608), (-1608), (Money) null);
      int int0 = message0.getFromAccount();
      assertEquals((-1608), int0);
      assertEquals(2028, message0.getMessageCode());
      assertEquals(2028, message0.getPIN());
      assertEquals(-1608, message0.getToAccount());
      assertEquals(-1608, message0.getSerialNumber());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Message message0 = new Message(0, (Card) null, 2, 2, 2, 0, (Money) null);
      message0.getCard();
      assertEquals(2, message0.getFromAccount());
      assertEquals(2, message0.getPIN());
      assertEquals(2, message0.getSerialNumber());
      assertEquals(0, message0.getToAccount());
      assertEquals(0, message0.getMessageCode());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Card card0 = new Card(1);
      Message message0 = new Message(1, card0, 1, 1, 1, 1, (Money) null);
      message0.getCard();
      assertEquals(1, message0.getSerialNumber());
      assertEquals(1, message0.getMessageCode());
      assertEquals(1, message0.getToAccount());
      assertEquals(1, message0.getFromAccount());
      assertEquals(1, message0.getPIN());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Card card0 = new Card((-1869));
      Message message0 = new Message((-1869), card0, (-1869), (-1869), (-1869), (-1869), (Money) null);
      message0.getCard();
      assertEquals(-1869, message0.getSerialNumber());
      assertEquals(-1869, message0.getPIN());
      assertEquals(-1869, message0.getToAccount());
      assertEquals(-1869, message0.getMessageCode());
      assertEquals(-1869, message0.getFromAccount());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Card card0 = new Card(1);
      Message message0 = new Message(1, card0, 1, 1, 1, 1, (Money) null);
      // Undeclared exception!
      try { 
        message0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("banking.Message", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Card card0 = new Card((-1869));
      Message message0 = new Message((-1869), card0, (-1869), (-1869), (-1869), (-1869), (Money) null);
      // Undeclared exception!
      try { 
        message0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("banking.Message", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Card card0 = new Card(4);
      Message message0 = new Message(4, card0, 4, 4, 4, 4, (Money) null);
      // Undeclared exception!
      try { 
        message0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("banking.Message", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Card card0 = new Card(3);
      Message message0 = new Message(3, card0, 3, 3, 3, 3, (Money) null);
      // Undeclared exception!
      try { 
        message0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("banking.Message", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Card card0 = new Card(2);
      Message message0 = new Message(2, card0, 2, 2, 2, 2, (Money) null);
      // Undeclared exception!
      try { 
        message0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("banking.Message", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Card card0 = new Card(0);
      Message message0 = new Message(0, card0, 0, 0, 0, 0, (Money) null);
      // Undeclared exception!
      try { 
        message0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("banking.Message", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Card card0 = new Card(1);
      Message message0 = new Message(3206, card0, 1, 3206, 82, 82, (Money) null);
      int int0 = message0.getPIN();
      assertEquals(82, message0.getFromAccount());
      assertEquals(3206, message0.getMessageCode());
      assertEquals(82, message0.getToAccount());
      assertEquals(1, int0);
      assertEquals(3206, message0.getSerialNumber());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Card card0 = new Card(4);
      Message message0 = new Message(4, card0, 0, 4, 4, 4, (Money) null);
      int int0 = message0.getSerialNumber();
      assertEquals(4, message0.getMessageCode());
      assertEquals(0, message0.getPIN());
      assertEquals(4, message0.getToAccount());
      assertEquals(4, message0.getFromAccount());
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Card card0 = new Card((-1869));
      Message message0 = new Message((-1869), card0, (-1869), (-1869), (-1869), (-1869), (Money) null);
      message0.getAmount();
      assertEquals(-1869, message0.getSerialNumber());
      assertEquals(-1869, message0.getToAccount());
      assertEquals(-1869, message0.getFromAccount());
      assertEquals(-1869, message0.getPIN());
      assertEquals(-1869, message0.getMessageCode());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Message message0 = new Message(0, (Card) null, 0, 4901, 1, 2854, (Money) null);
      int int0 = message0.getToAccount();
      assertEquals(0, message0.getMessageCode());
      assertEquals(1, message0.getFromAccount());
      assertEquals(4901, message0.getSerialNumber());
      assertEquals(2854, int0);
      assertEquals(0, message0.getPIN());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Card card0 = new Card(2028);
      Message message0 = new Message(2028, card0, 2028, 2028, 2028, 2028, (Money) null);
      int int0 = message0.getFromAccount();
      assertEquals(2028, int0);
      assertEquals(2028, message0.getToAccount());
      assertEquals(2028, message0.getSerialNumber());
      assertEquals(2028, message0.getPIN());
      assertEquals(2028, message0.getMessageCode());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Card card0 = new Card(0);
      Message message0 = new Message(0, card0, 1787, 1787, 1034, 0, (Money) null);
      message0.getCard();
      assertEquals(0, message0.getToAccount());
      assertEquals(1787, message0.getSerialNumber());
      assertEquals(1787, message0.getPIN());
      assertEquals(0, message0.getMessageCode());
      assertEquals(1034, message0.getFromAccount());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Card card0 = new Card(0);
      Message message0 = new Message(0, card0, 0, 0, 0, 0, (Money) null);
      int int0 = message0.getMessageCode();
      assertEquals(0, int0);
      assertEquals(0, message0.getSerialNumber());
      assertEquals(0, message0.getPIN());
      assertEquals(0, message0.getToAccount());
      assertEquals(0, message0.getFromAccount());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Card card0 = new Card(1695);
      Message message0 = new Message(1695, card0, 1695, (-501), 1695, (-501), (Money) null);
      message0.setPIN(1695);
      assertEquals(-501, message0.getSerialNumber());
      assertEquals(-501, message0.getToAccount());
      assertEquals(1695, message0.getFromAccount());
      assertEquals(1695, message0.getMessageCode());
      assertEquals(1695, message0.getPIN());
  }
}
