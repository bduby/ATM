/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 12 20:38:52 GMT 2016
 */

package atm.transaction;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import atm.ATM;
import atm.Session;
import atm.transaction.Deposit;
import atm.transaction.Inquiry;
import atm.transaction.Transaction;
import atm.transaction.Transfer;
import banking.Card;
import java.net.Inet4Address;
import java.net.InetAddress;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockInetAddress;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Transaction_ESTest extends Transaction_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Session session0 = new Session((ATM) null);
      Card card0 = new Card(179);
      Transfer transfer0 = new Transfer((ATM) null, session0, card0, 179);
      // Undeclared exception!
      try { 
        transfer0.performInvalidPINExtension();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("atm.transaction.Transaction", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Inet4Address inet4Address0 = (Inet4Address)MockInetAddress.getByName(")q");
      ATM aTM0 = new ATM(330, "Transfer", "Transfer", (InetAddress) inet4Address0);
      Session session0 = new Session(aTM0);
      Card card0 = new Card(330);
      Transfer transfer0 = new Transfer(aTM0, session0, card0, 330);
      transfer0.serialNumber = (-793);
      // Undeclared exception!
      try { 
        transfer0.performTransaction();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("atm.physical.CustomerConsole", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ATM aTM0 = new ATM(1757, "", "", (InetAddress) null);
      Session session0 = new Session(aTM0);
      Transfer transfer0 = new Transfer(aTM0, session0, (Card) null, 1757);
      assertEquals(1, transfer0.getSerialNumber());
      
      transfer0.serialNumber = 0;
      int int0 = transfer0.getSerialNumber();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ATM aTM0 = new ATM(1757, "", "", (InetAddress) null);
      Session session0 = new Session(aTM0);
      Transfer transfer0 = new Transfer(aTM0, session0, (Card) null, 1757);
      transfer0.serialNumber = (-31);
      int int0 = transfer0.getSerialNumber();
      assertEquals((-31), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Inet4Address inet4Address0 = (Inet4Address)MockInetAddress.anyLocalAddress();
      ATM aTM0 = new ATM(0, "]gU},\"Ew", ":*G][RzIM=*SlA=", (InetAddress) inet4Address0);
      Session session0 = new Session(aTM0);
      Card card0 = new Card(0);
      Inquiry inquiry0 = new Inquiry(aTM0, session0, card0, 0);
      inquiry0.completeTransaction();
      assertEquals(1, inquiry0.getSerialNumber());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ATM aTM0 = new ATM(0, (String) null, (String) null, (InetAddress) null);
      Session session0 = new Session(aTM0);
      Card card0 = new Card(0);
      // Undeclared exception!
      try { 
        Transaction.makeTransaction(aTM0, session0, card0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("atm.physical.CustomerConsole", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Inet4Address inet4Address0 = (Inet4Address)MockInetAddress.getLocalHost();
      ATM aTM0 = new ATM(397, "(P^", "", (InetAddress) inet4Address0);
      Session session0 = new Session(aTM0);
      Card card0 = new Card(397);
      Deposit deposit0 = new Deposit(aTM0, session0, card0, 397);
      // Undeclared exception!
      try { 
        deposit0.getSpecificsFromCustomer();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("atm.physical.CustomerConsole", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Session session0 = new Session((ATM) null);
      Card card0 = new Card(2);
      Transfer transfer0 = new Transfer((ATM) null, session0, card0, 2);
      // Undeclared exception!
      try { 
        transfer0.completeTransaction();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("banking.Receipt", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Inet4Address inet4Address0 = (Inet4Address)MockInetAddress.getLocalHost();
      ATM aTM0 = new ATM(0, "Withdrawal", "Withdrawal", (InetAddress) inet4Address0);
      Session session0 = new Session(aTM0);
      Card card0 = new Card(0);
      Inquiry inquiry0 = new Inquiry(aTM0, session0, card0, 0);
      // Undeclared exception!
      try { 
        inquiry0.performInvalidPINExtension();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("atm.physical.CustomerConsole", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ATM aTM0 = new ATM(1757, "", "", (InetAddress) null);
      Session session0 = new Session(aTM0);
      Transfer transfer0 = new Transfer(aTM0, session0, (Card) null, 1757);
      int int0 = transfer0.getSerialNumber();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Transaction.CardRetained transaction_CardRetained0 = new Transaction.CardRetained();
  }
}
