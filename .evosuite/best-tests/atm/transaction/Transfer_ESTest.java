/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 12 18:22:06 GMT 2016
 */

package atm.transaction;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import atm.ATM;
import atm.Session;
import atm.transaction.Transfer;
import banking.Card;
import java.net.Inet4Address;
import java.net.InetAddress;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockInetAddress;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Transfer_ESTest extends Transfer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Inet4Address inet4Address0 = (Inet4Address)MockInetAddress.anyLocalAddress();
      ATM aTM0 = new ATM(3196, "&", "&", (InetAddress) inet4Address0);
      Session session0 = new Session(aTM0);
      Card card0 = new Card(3196);
      Transfer transfer0 = new Transfer(aTM0, session0, card0, 3196);
      // Undeclared exception!
      try { 
        transfer0.getSpecificsFromCustomer();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("atm.physical.CustomerConsole", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Inet4Address inet4Address0 = (Inet4Address)MockInetAddress.getByName("TRANSFER FROM: ");
      ATM aTM0 = new ATM((-136), "TRANSFER FROM: ", "TRANSFER FROM: ", (InetAddress) inet4Address0);
      Session session0 = new Session(aTM0);
      Card card0 = new Card((-136));
      Transfer transfer0 = new Transfer(aTM0, session0, card0, (-136));
      // Undeclared exception!
      try { 
        transfer0.completeTransaction();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("atm.transaction.Transfer$1", e);
      }
  }
}
