/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 12 18:03:34 GMT 2016
 */

package banking;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import banking.Money;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Money_ESTest extends Money_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Money money0 = new Money(2051, 2051);
      Money money1 = new Money(0);
      boolean boolean0 = money1.lessEqual(money0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Money money0 = new Money((-3293));
      // Undeclared exception!
      try { 
        money0.subtract((Money) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("banking.Money", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Money money0 = new Money((-5201));
      // Undeclared exception!
      try { 
        money0.lessEqual((Money) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("banking.Money", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Money money0 = new Money(1);
      // Undeclared exception!
      try { 
        money0.add((Money) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("banking.Money", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Money money0 = null;
      try {
        money0 = new Money((Money) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("banking.Money", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Money money0 = new Money(558, 558);
      boolean boolean0 = money0.lessEqual(money0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Money money0 = new Money(558, 558);
      Money money1 = new Money(558);
      boolean boolean0 = money0.lessEqual(money1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Money money0 = new Money(558, 558);
      String string0 = money0.toString();
      assertEquals("$563.58", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Money money0 = new Money(558, 558);
      money0.subtract(money0);
      String string0 = money0.toString();
      assertEquals("$0.00", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Money money0 = new Money(558, 558);
      money0.add(money0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Money money0 = new Money(558, 558);
      Money money1 = new Money(money0);
      money0.add(money0);
      money1.subtract(money0);
      String string0 = money1.toString();
      assertEquals("$-563.0-58", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Money money0 = new Money(10, 10);
      String string0 = money0.toString();
      assertEquals("$10.10", string0);
  }
}
