/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 12 17:52:19 GMT 2016
 */

package banking;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import banking.Card;
import banking.Message;
import banking.Money;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Message_ESTest extends Message_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Card card0 = new Card(0);
      Message message0 = new Message(0, card0, 0, 0, 0, 0, (Money) null);
      // Undeclared exception!
      try { 
        message0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("banking.Message", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Card card0 = new Card(0);
      Message message0 = new Message(0, card0, 0, 0, 0, 0, (Money) null);
      int int0 = message0.getToAccount();
      assertEquals(0, message0.getPIN());
      assertEquals(0, message0.getMessageCode());
      assertEquals(0, message0.getFromAccount());
      assertEquals(0, message0.getSerialNumber());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Card card0 = new Card(1941);
      Message message0 = new Message(1941, card0, 1941, 1941, 1941, 1941, (Money) null);
      int int0 = message0.getToAccount();
      assertEquals(1941, int0);
      assertEquals(1941, message0.getMessageCode());
      assertEquals(1941, message0.getSerialNumber());
      assertEquals(1941, message0.getPIN());
      assertEquals(1941, message0.getFromAccount());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Card card0 = new Card((-2300));
      Message message0 = new Message((-2300), card0, (-2300), 0, (-2300), (-2300), (Money) null);
      int int0 = message0.getSerialNumber();
      assertEquals(-2300, message0.getToAccount());
      assertEquals(0, int0);
      assertEquals(-2300, message0.getFromAccount());
      assertEquals(-2300, message0.getPIN());
      assertEquals(-2300, message0.getMessageCode());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Card card0 = new Card(1);
      Message message0 = new Message(1, card0, 1, 1, 1, 1, (Money) null);
      int int0 = message0.getSerialNumber();
      assertEquals(1, int0);
      assertEquals(1, message0.getFromAccount());
      assertEquals(1, message0.getPIN());
      assertEquals(1, message0.getMessageCode());
      assertEquals(1, message0.getToAccount());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Card card0 = new Card(0);
      Message message0 = new Message(0, card0, 0, 0, (-980), (-980), (Money) null);
      int int0 = message0.getPIN();
      assertEquals(0, int0);
      assertEquals(-980, message0.getToAccount());
      assertEquals(0, message0.getMessageCode());
      assertEquals(-980, message0.getFromAccount());
      assertEquals(0, message0.getSerialNumber());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Card card0 = new Card(2);
      Message message0 = new Message(2, card0, 2, 2, 2, 2, (Money) null);
      int int0 = message0.getPIN();
      assertEquals(2, message0.getMessageCode());
      assertEquals(2, message0.getSerialNumber());
      assertEquals(2, int0);
      assertEquals(2, message0.getFromAccount());
      assertEquals(2, message0.getToAccount());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Card card0 = new Card(0);
      Message message0 = new Message(0, card0, 0, 0, 0, 0, (Money) null);
      int int0 = message0.getMessageCode();
      assertEquals(0, message0.getSerialNumber());
      assertEquals(0, message0.getToAccount());
      assertEquals(0, message0.getPIN());
      assertEquals(0, int0);
      assertEquals(0, message0.getFromAccount());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Card card0 = new Card((-2599));
      Message message0 = new Message((-1), card0, (-1), (-1), (-1), (-2599), (Money) null);
      int int0 = message0.getMessageCode();
      assertEquals(-1, message0.getPIN());
      assertEquals(-1, message0.getFromAccount());
      assertEquals(-2599, message0.getToAccount());
      assertEquals((-1), int0);
      assertEquals(-1, message0.getSerialNumber());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Card card0 = new Card(2);
      Message message0 = new Message(2, card0, 2, 2, 2, 2, (Money) null);
      int int0 = message0.getFromAccount();
      assertEquals(2, message0.getToAccount());
      assertEquals(2, message0.getMessageCode());
      assertEquals(2, message0.getSerialNumber());
      assertEquals(2, message0.getPIN());
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Card card0 = new Card((-2476));
      Message message0 = new Message((-2476), card0, (-2476), (-2476), (-2476), (-2476), (Money) null);
      int int0 = message0.getFromAccount();
      assertEquals(-2476, message0.getToAccount());
      assertEquals((-2476), int0);
      assertEquals(-2476, message0.getSerialNumber());
      assertEquals(-2476, message0.getMessageCode());
      assertEquals(-2476, message0.getPIN());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Card card0 = new Card(0);
      Message message0 = new Message(0, card0, 0, 0, 0, 0, (Money) null);
      message0.getCard();
      assertEquals(0, message0.getPIN());
      assertEquals(0, message0.getFromAccount());
      assertEquals(0, message0.getMessageCode());
      assertEquals(0, message0.getToAccount());
      assertEquals(0, message0.getSerialNumber());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Card card0 = new Card(4648);
      Message message0 = new Message(4648, card0, 4648, 4648, 4648, 350, (Money) null);
      message0.getCard();
      assertEquals(4648, message0.getPIN());
      assertEquals(350, message0.getToAccount());
      assertEquals(4648, message0.getMessageCode());
      assertEquals(4648, message0.getFromAccount());
      assertEquals(4648, message0.getSerialNumber());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Card card0 = new Card((-1));
      Message message0 = new Message(3177, card0, (-1), 3177, 0, 0, (Money) null);
      message0.getCard();
      assertEquals(0, message0.getToAccount());
      assertEquals(-1, message0.getPIN());
      assertEquals(3177, message0.getMessageCode());
      assertEquals(3177, message0.getSerialNumber());
      assertEquals(0, message0.getFromAccount());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Card card0 = new Card(4);
      Message message0 = new Message(4, card0, 4, 4, 4, 4, (Money) null);
      // Undeclared exception!
      try { 
        message0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("banking.Message", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Card card0 = new Card(3);
      Message message0 = new Message(3, card0, 3, 3, 3, 3, (Money) null);
      // Undeclared exception!
      try { 
        message0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("banking.Message", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Card card0 = new Card(2);
      Message message0 = new Message(2, card0, 2, 2, 2, 2, (Money) null);
      // Undeclared exception!
      try { 
        message0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("banking.Message", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Card card0 = new Card(1);
      Message message0 = new Message(1, card0, 1, 1, 1, 1, (Money) null);
      // Undeclared exception!
      try { 
        message0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("banking.Message", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Card card0 = new Card((-1));
      Message message0 = new Message((-1), card0, (-1), (-1), (-1), (-1), (Money) null);
      // Undeclared exception!
      try { 
        message0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("banking.Message", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Card card0 = new Card((-1));
      Message message0 = new Message((-1), card0, (-1), (-1), (-1), (-1), (Money) null);
      int int0 = message0.getPIN();
      assertEquals(-1, message0.getSerialNumber());
      assertEquals(-1, message0.getMessageCode());
      assertEquals((-1), int0);
      assertEquals(-1, message0.getFromAccount());
      assertEquals(-1, message0.getToAccount());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Message message0 = new Message(0, (Card) null, (-1641), (-4029), 0, 1, (Money) null);
      int int0 = message0.getSerialNumber();
      assertEquals(0, message0.getMessageCode());
      assertEquals((-4029), int0);
      assertEquals(0, message0.getFromAccount());
      assertEquals(-1641, message0.getPIN());
      assertEquals(1, message0.getToAccount());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Card card0 = new Card(1976);
      Message message0 = new Message(1976, card0, 1976, 1976, 1976, (-3683), (Money) null);
      message0.getAmount();
      assertEquals(-3683, message0.getToAccount());
      assertEquals(1976, message0.getSerialNumber());
      assertEquals(1976, message0.getPIN());
      assertEquals(1976, message0.getMessageCode());
      assertEquals(1976, message0.getFromAccount());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Card card0 = new Card(1976);
      Message message0 = new Message(1976, card0, 1976, 1976, 1976, (-3683), (Money) null);
      int int0 = message0.getToAccount();
      assertEquals(1976, message0.getMessageCode());
      assertEquals(1976, message0.getSerialNumber());
      assertEquals(1976, message0.getFromAccount());
      assertEquals((-3683), int0);
      assertEquals(1976, message0.getPIN());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Message message0 = new Message(0, (Card) null, (-1641), (-4029), 0, 1, (Money) null);
      int int0 = message0.getFromAccount();
      assertEquals(-4029, message0.getSerialNumber());
      assertEquals(0, message0.getMessageCode());
      assertEquals(1, message0.getToAccount());
      assertEquals(0, int0);
      assertEquals(-1641, message0.getPIN());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Message message0 = new Message(0, (Card) null, (-1641), (-4029), 0, 1, (Money) null);
      message0.getCard();
      assertEquals(-4029, message0.getSerialNumber());
      assertEquals(0, message0.getMessageCode());
      assertEquals(-1641, message0.getPIN());
      assertEquals(0, message0.getFromAccount());
      assertEquals(1, message0.getToAccount());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Card card0 = new Card(0);
      Message message0 = new Message(1, card0, 0, 0, 0, 4, (Money) null);
      int int0 = message0.getMessageCode();
      assertEquals(0, message0.getPIN());
      assertEquals(1, int0);
      assertEquals(4, message0.getToAccount());
      assertEquals(0, message0.getFromAccount());
      assertEquals(0, message0.getSerialNumber());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Message message0 = new Message(0, (Card) null, (-1641), (-4029), 0, 1, (Money) null);
      message0.setPIN((-35));
      assertEquals(-35, message0.getPIN());
  }
}
